specVersion: 0.0.2
description: iExecPoCoV3
repository: https://github.com/iExecBlockchainComputing/PoCo-dev
schema:
  file: ./schema.graphql
dataSources:
# ================================= IexecHub ==================================
  - name: IexecHub
    kind: ethereum/contract
    network: mainnet
    source:
      address: '0x1383c16c927c4A853684d1a9c676986f25E22111'
      abi: IexecHub
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Category
        - Task
        - Contribution
        - TaskInitialize
        - TaskContribute
        - TaskConsensus
        - TaskReveal
        - TaskReopen
        - TaskFinalize
        - TaskClaimed
      abis:
        - name: IexecHub
          file: node_modules/iexec-poco/build/contracts-min/IexecHub.json
        - name: CategoryManager
          file: node_modules/iexec-poco/build/contracts-min/CategoryManager.json
      eventHandlers:
        - event: CreateCategory(uint256,string,string,uint256)
          handler: handleCreateCategory
        - event: TaskInitialize(indexed bytes32,indexed address)
          handler: handleTaskInitialize
        - event: TaskContribute(indexed bytes32,indexed address,bytes32)
          handler: handleTaskContribute
        - event: TaskConsensus(indexed bytes32,bytes32)
          handler: handleTaskConsensus
        - event: TaskReveal(indexed bytes32,indexed address,bytes32)
          handler: handleTaskReveal
        - event: TaskReopen(indexed bytes32)
          handler: handleTaskReopen
        - event: TaskFinalize(indexed bytes32,bytes)
          handler: handleTaskFinalize
        - event: TaskClaimed(indexed bytes32)
          handler: handleTaskClaimed
      file: ./src/IexecHub
# ================================ IexecClerk =================================
  - name: IexecClerk
    kind: ethereum/contract
    network: mainnet
    source:
      address: '0x3780d894DB2cB84135bBa025ba9ef0Ac518DC311'
      abi: IexecClerk
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Account
        - AppOrder
        - DatasetOrder
        - WorkerpoolOrder
        - RequesterOrder
        - Deal
        - SchedulerNotice
        - Deposit
        - Withdraw
        - Reward
        - Seize
        - Lock
        - Unlock
      abis:
        - name: IexecClerk
          file: node_modules/iexec-poco/build/contracts-min/IexecClerk.json
        - name: Relay
          file: node_modules/iexec-poco/build/contracts-min/Relay.json
        - name: Escrow
          file: node_modules/iexec-poco/build/contracts-min/Escrow.json
      eventHandlers:
        - event: OrdersMatched(bytes32,bytes32,bytes32,bytes32,bytes32,uint256)
          handler: handleOrdersMatched
        - event: SchedulerNotice(indexed address,bytes32)
          handler: handleSchedulerNotice
        # - event: ClosedAppOrder(bytes32)
        #   handler: handleClosedAppOrder
        # - event: ClosedDatasetOrder(bytes32)
        #   handler: handleClosedDatasetOrder
        # - event: ClosedWorkerpoolOrder(bytes32)
        #   handler: handleClosedWorkerpoolOrder
        # - event: ClosedRequestOrder(bytes32)
        #   handler: handleClosedRequestOrder
        # - event : BroadcastAppOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes))
        #   handler: handleBroadcastAppOrder
        # - event : BroadcastDatasetOrder((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes))
        #   handler: handleBroadcastDatasetOrder
        # - event : BroadcastWorkerpoolOrder((address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes))
        #   handler: handleBroadcastWorkerpoolOrder
        # - event : BroadcastRequestOrder((address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes))
        #   handler: handleBroadcastRequestOrder
        - event: Deposit(address,uint256)
          handler: handleDeposit
        - event: DepositFor(address,uint256,address)
          handler: handleDepositFor
        - event: Withdraw(address,uint256)
          handler: handleWithdraw
        - event: Reward(address,uint256,bytes32)
          handler: handleReward
        - event: Seize(address,uint256,bytes32)
          handler: handleSeize
        - event: Lock(address,uint256)
          handler: handleLock
        - event: Unlock(address,uint256)
          handler: handleUnlock
      file: ./src/IexecClerk
# =============================== App registry ================================
  - name: AppRegistry
    kind: ethereum/contract
    network: mainnet
    source:
      address: '0x3322D449A43E01178672A5FBEA9E7aF3b8c7bB29'
      abi: AppRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - App
      abis:
        - name: App
          file: node_modules/iexec-poco/build/contracts-min/App.json
        - name: AppRegistry
          file: node_modules/iexec-poco/build/contracts-min/AppRegistry.json
      eventHandlers:
        - event: CreateApp(indexed address,address)
          handler: handleCreateApp
      file: ./src/registries
# ============================= Dataset registry ==============================
  - name: DatasetRegistry
    kind: ethereum/contract
    network: mainnet
    source:
      address: '0xC28F63b8379087F02E09da1BC62148874E730Ffd'
      abi: DatasetRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Dataset
      abis:
        - name: Dataset
          file: node_modules/iexec-poco/build/contracts-min/Dataset.json
        - name: DatasetRegistry
          file: node_modules/iexec-poco/build/contracts-min/DatasetRegistry.json
      eventHandlers:
        - event: CreateDataset(indexed address,address)
          handler: handleCreateDataset
      file: ./src/registries
# ============================ Workerpool registry ============================
  - name: WorkerpoolRegistry
    kind: ethereum/contract
    network: mainnet
    source:
      address: '0xc398052563469e6Ea7C442aBf124aADE7ec2CC92'
      abi: WorkerpoolRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Workerpool
      abis:
        - name: Workerpool
          file: node_modules/iexec-poco/build/contracts-min/Workerpool.json
        - name: WorkerpoolRegistry
          file: node_modules/iexec-poco/build/contracts-min/WorkerpoolRegistry.json
      eventHandlers:
        - event: CreateWorkerpool(indexed address,indexed address,string)
          handler: handleCreateWorkerpool
      file: ./src/registries
templates:
  - name: Workerpool
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Workerpool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Workerpool
        - PolicyChange
      abis:
        - name: Workerpool
          file: node_modules/iexec-poco/build/contracts-min/Workerpool.json
      eventHandlers:
        - event: PolicyUpdate(uint256,uint256,uint256,uint256)
          handler: handlePolicyUpdate
      file: ./src/registries
