specVersion: 0.0.2
description: iExecPoCoV5
repository: https://github.com/iExecBlockchainComputing/PoCo-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - name: ERC1538
    kind: ethereum/contract
    network: goerli
    source:
      address: '0x639bb3229618FE7C110541e558AaB9DE5cc71A81'
      abi: ERC1538
      startBlock: 2316615
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - ERC1538Module
        - ERC1538Function
        - ERC1538FunctionUpdateEvent
        - ERC1538CommitMessageEvent
      abis:
        - name: ERC1538
          file: node_modules/@iexec/solidity/build/contracts/IERC1538.json
      eventHandlers:
        - event: CommitMessage(string)
          handler: handleCommitMessage
        - event: FunctionUpdate(indexed bytes4,indexed address,indexed address,string)
          handler: handleFunctionUpdate
      file: ./src/ERC1538/ERC1538.ts

  - name: Core
    kind: ethereum/contract
    network: goerli
    source:
      address: '0x639bb3229618FE7C110541e558AaB9DE5cc71A81' # hub.iexec.eth
      abi: IexecInterfaceTokenABILegacy
      startBlock: 2316615
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Category
        - Account
        - AppOrder
        - DatasetOrder
        - WorkerpoolOrder
        - RequesterOrder
        - Deal
        - SchedulerNotice
        - Task
        - Contribution
        - TaskInitialize
        - TaskContribute
        - TaskConsensus
        - TaskReveal
        - TaskReopen
        - TaskFinalize
        - TaskClaimed
        - AccurateContribution
        - FaultyContribution
        - Transfer
        - Reward
        - Seize
        - Lock
        - Unlock
      abis:
        - name: IexecInterfaceTokenABILegacy
          file: ./abi/IexecInterfaceTokenABILegacy.json
      eventHandlers:
        - event: CreateCategory(uint256,string,string,uint256)
          handler: handleCreateCategory
        - event: OrdersMatched(bytes32,bytes32,bytes32,bytes32,bytes32,uint256)
          handler: handleOrdersMatched
        - event: SchedulerNotice(indexed address,bytes32)
          handler: handleSchedulerNotice
        - event: TaskInitialize(indexed bytes32,indexed address)
          handler: handleTaskInitialize
        - event: TaskContribute(indexed bytes32,indexed address,bytes32)
          handler: handleTaskContribute
        - event: TaskConsensus(indexed bytes32,bytes32)
          handler: handleTaskConsensus
        - event: TaskReveal(indexed bytes32,indexed address,bytes32)
          handler: handleTaskReveal
        - event: TaskReopen(indexed bytes32)
          handler: handleTaskReopen
        - event: TaskFinalize(indexed bytes32,bytes)
          handler: handleTaskFinalize
        - event: TaskClaimed(indexed bytes32)
          handler: handleTaskClaimed
        - event: AccurateContribution(indexed address,indexed bytes32)
          handler: handleAccurateContribution
        - event: FaultyContribution(indexed address,indexed bytes32)
          handler: handleFaultyContribution
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Reward(address,uint256,bytes32)
          handler: handleReward
        - event: Seize(address,uint256,bytes32)
          handler: handleSeize
        - event: Lock(address,uint256)
          handler: handleLock
        - event: Unlock(address,uint256)
          handler: handleUnlock
      file: ./src/Modules/index.ts

# # =============================== App registry ================================
#   - name: AppRegistry
#     kind: ethereum/contract
#     network: goerli
#     source:
#       address: '0x221b9a91320a601b30992610425a960b1949b22d' # apps.iexec.eth
#       abi: AppRegistry
#       startBlock: 1128400
#     mapping:
#       kind: ethereum/events
#       apiVersion: 0.0.3
#       language: wasm/assemblyscript
#       entities:
#         - App
#       abis:
#         - name: App
#           file: node_modules/iexec-poco-interface/build/contracts/App.json
#         - name: AppRegistry
#           file: node_modules/iexec-poco-interface/build/contracts/AppRegistry.json
#       eventHandlers:
#         - event: CreateApp(indexed address,address)
#           handler: handleCreateApp
#       file: ./src/registries/index.ts
# # ============================= Dataset registry ==============================
#   - name: DatasetRegistry
#     kind: ethereum/contract
#     network: goerli
#     source:
#       address: '0x8dc0a7d917aef68e340dbf68ef4ecb36d1ca941b' # datasets.iexec.eth
#       abi: DatasetRegistry
#       startBlock: 1128400
#     mapping:
#       kind: ethereum/events
#       apiVersion: 0.0.3
#       language: wasm/assemblyscript
#       entities:
#         - Dataset
#       abis:
#         - name: Dataset
#           file: node_modules/iexec-poco-interface/build/contracts/Dataset.json
#         - name: DatasetRegistry
#           file: node_modules/iexec-poco-interface/build/contracts/DatasetRegistry.json
#       eventHandlers:
#         - event: CreateDataset(indexed address,address)
#           handler: handleCreateDataset
#       file: ./src/registries/index.ts
# # ============================ Workerpool registry ============================
#   - name: WorkerpoolRegistry
#     kind: ethereum/contract
#     network: goerli
#     source:
#       address: '0xdad30aab14f569830bfd26edf72df876dc30d20c' # workerpool.iexec.eth
#       abi: WorkerpoolRegistry
#       startBlock: 1128400
#     mapping:
#       kind: ethereum/events
#       apiVersion: 0.0.3
#       language: wasm/assemblyscript
#       entities:
#         - Workerpool
#       abis:
#         - name: Workerpool
#           file: node_modules/iexec-poco-interface/build/contracts/Workerpool.json
#         - name: WorkerpoolRegistry
#           file: node_modules/iexec-poco-interface/build/contracts/WorkerpoolRegistry.json
#       eventHandlers:
#         - event: CreateWorkerpool(indexed address,indexed address,string)
#           handler: handleCreateWorkerpool
#       file: ./src/registries/index.ts
# templates:
#   - name: Workerpool
#     kind: ethereum/contract
#     network: goerli
#     source:
#       abi: Workerpool
#     mapping:
#       kind: ethereum/events
#       apiVersion: 0.0.3
#       language: wasm/assemblyscript
#       entities:
#         - Workerpool
#         - PolicyChange
#       abis:
#         - name: Workerpool
#           file: node_modules/iexec-poco-interface/build/contracts/Workerpool.json
#       eventHandlers:
#         - event: PolicyUpdate(uint256,uint256,uint256,uint256)
#           handler: handlePolicyUpdate
#       file: ./src/registries/index.ts
